DROP FUNCTION IF EXISTS get_profile_association_snapshot CASCADE;

CREATE OR REPLACE FUNCTION  get_profile_association_snapshot(_master_table text, _master_type text, _detail_table text, _detail_type text)  RETURNS TABLE(association_id uuid, master_id uuid, masterwrapperid uuid, master json, master_type text, detail_id uuid, detailwrapperid uuid, detail_type text, detail_order integer, detail json, react_to text, job_profile_id uuid)    AS $$      BEGIN        RETURN query          EXECUTE format('            SELECT              a.id,              masterwrapper.%s_id AS master_id,  a.master_wrapper_id AS masterwrapperid,              json_agg(master.jsonb) AS master,              ''%s'' AS master_type,              detailwrapper.%s_id AS detail_id,  a.detail_wrapper_id AS detailwrapperid,              ''%s'' AS detail_type,              a.detail_order AS detail_order,              json_agg(detail.jsonb) AS detail,              a.react_to as react_to,              a.job_profile_id as job_profile_id            FROM profile_associations a              INNER JOIN profile_wrappers as masterwrapper ON a.master_wrapper_id = masterwrapper.id  INNER JOIN profile_wrappers as detailwrapper ON a.detail_wrapper_id = detailwrapper.id              INNER JOIN %s master ON master.id = masterwrapper.%s_id              INNER JOIN %s detail ON detail.id = detailwrapper.%s_id            GROUP BY a.id, masterwrapper.%s_id, detailwrapper.%s_id, a.master_wrapper_id, a.detail_wrapper_id',            _master_type, _master_type, _detail_type, _detail_type, _master_table, _master_type, _detail_table, _detail_type, _master_type, _detail_type);      END $$language plpgsql;

CREATE OR REPLACE VIEW associations_view  AS    SELECT association_id, master_id, masterwrapperid, master, master_type, detail_id, detailwrapperid, detail_type, detail_order, detail, react_to, job_profile_id    FROM get_profile_association_snapshot('job_profiles', 'JOB_PROFILE', 'match_profiles', 'MATCH_PROFILE')      UNION ALL    SELECT association_id, master_id, masterwrapperid, master, master_type, detail_id, detailwrapperid, detail_type, detail_order, detail, react_to, job_profile_id    FROM get_profile_association_snapshot('job_profiles', 'JOB_PROFILE', 'action_profiles', 'ACTION_PROFILE')      UNION ALL    SELECT association_id, master_id, masterwrapperid, master, master_type, detail_id, detailwrapperid, detail_type, detail_order, detail, react_to, job_profile_id    FROM get_profile_association_snapshot('match_profiles', 'MATCH_PROFILE', 'match_profiles', 'MATCH_PROFILE')     UNION ALL    SELECT association_id, master_id, masterwrapperid, master, master_type, detail_id, detailwrapperid, detail_type, detail_order, detail, react_to, job_profile_id    FROM get_profile_association_snapshot('match_profiles','MATCH_PROFILE', 'action_profiles', 'ACTION_PROFILE')     UNION ALL    SELECT association_id, master_id, masterwrapperid, master, master_type, detail_id, detailwrapperid, detail_type, detail_order, detail, react_to, job_profile_id    FROM get_profile_association_snapshot('action_profiles', 'ACTION_PROFILE', 'match_profiles', 'MATCH_PROFILE')      UNION ALL    SELECT association_id, master_id, masterwrapperid, master, master_type, detail_id, detailwrapperid, detail_type, detail_order, detail, react_to, job_profile_id    FROM get_profile_association_snapshot('action_profiles', 'ACTION_PROFILE', 'action_profiles', 'ACTION_PROFILE')      UNION ALL    SELECT association_id, master_id, masterwrapperid, master, master_type, detail_id, detailwrapperid, detail_type, detail_order, detail, react_to, job_profile_id    FROM get_profile_association_snapshot('action_profiles', 'ACTION_PROFILE', 'mapping_profiles', 'MAPPING_PROFILE')      UNION ALL    SELECT profile_associations.id AS association_id, profile_associations.job_profile_id AS master_id, profile_associations.master_wrapper_id AS masterwrapperid, json_agg(JOB.jsonb) AS master, 'JOB_PROFILE' AS master_type, DETAIL.ID AS detail_id, profile_associations.detail_wrapper_id AS detailwrapperid, 'ACTION_PROFILE' AS detail_type, 0 AS detail_order, json_agg(DETAIL.JSONB) AS detail, null AS react_to, profile_associations.job_profile_id AS job_profile_id    FROM profile_associations    INNER JOIN PROFILE_WRAPPERS MASTERWRAPPER ON profile_associations.master_wrapper_id = MASTERWRAPPER.ID    INNER JOIN PROFILE_WRAPPERS DETAILWRAPPER ON profile_associations.detail_Wrapper_id = DETAILWRAPPER.ID    INNER JOIN MATCH_PROFILES MASTER ON MASTER.ID = MASTERWRAPPER.MATCH_PROFILE_ID    INNER JOIN ACTION_PROFILES DETAIL ON DETAIL.ID = DETAILWRAPPER.ACTION_PROFILE_ID    INNER JOIN JOB_PROFILES JOB ON JOB.ID = profile_associations.job_profile_id    WHERE profile_associations.detail_profile_type = 'ACTION_PROFILE'    AND profile_associations.master_profile_type = 'MATCH_PROFILE'    GROUP BY profile_associations.id, MASTER.ID, DETAIL.ID, DETAIL.JSONB;
CREATE OR REPLACE RULE delete_associations_with_details AS  ON DELETE TO associations_view  DO INSTEAD (    DELETE FROM profile_associations WHERE OLD.master_id IN      (SELECT action_profile_id FROM profile_wrappers WHERE id = profile_associations.master_wrapper_id);    DELETE FROM profile_associations WHERE OLD.master_id IN      (SELECT job_profile_id FROM profile_wrappers WHERE id = profile_associations.master_wrapper_id);    DELETE FROM profile_associations WHERE OLD.master_id IN      (SELECT match_profile_id FROM profile_wrappers WHERE id = profile_associations.master_wrapper_id);    );

GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA ${myuniversity}_${mymodule} TO ${myuniversity}_${mymodule};
